---
import GitHub from "./icons/GitHub.astro";
import React from "./icons/React.astro";
import Link from "./icons/Link.astro";
import LinkButton from "./LinkButton.astro";
import NodeJs from "./icons/NodeJs.astro";
import MongoDb from "./icons/MongoDb.astro";
import JavaScript from "./icons/JavaScript.astro";
import Python from "./icons/Python.astro";
import Django from "./icons/Django.astro";
import Css from "./icons/Css.astro";
import HTML from "./icons/HTML.astro";
import Bootstrarp from "./icons/Bootstrap.astro";
import ExpressJs from "./icons/ExpressJs.astro";
import TypeScript from "./icons/TypeScript.astro";
import NextJs from "./icons/NextJs.astro";
import TailwindCss from "./icons/TailwindCss.astro";
import PostgresSql from "./icons/PostgresSql.astro";
import Prisma from "./icons/Prisma.astro";

const TAGS = {
  REACT: {
    name: "React.js",
    class: "bg-black text-white",
    icon: React,
  },
  NODE: {
    name: "Node.js",
    class: "bg-black text-white",
    icon: NodeJs,
  },
  MONGOdb: {
    name: "MongoDB",
    class: "bg-black text-white",
    icon: MongoDb,
  },
  JAVASCRIPT: {
    name: "JavaScript",
    class: "bg-black text-white",
    icon: JavaScript,
  },
  PYTHON: {
    name: "Python",
    class: "bg-black text-white",
    icon: Python,
  },
  DJANGO: {
    name: "Django",
    class: "bg-black text-white",
    icon: Django,
  },
  CSS: {
    name: "CSS",
    class: "bg-black text-white",
    icon: Css,
  },
  HTML: {
    name: "HTML",
    class: "bg-black text-white",
    icon: HTML,
  },
  BOOTSTRAP: {
    name: "Bootstrap",
    class: "bg-black text-white",
    icon: Bootstrarp,
  },
  EXPRESSJS: {
    name: "ExpressJS",
    class: "bg-black text-white",
    icon: ExpressJs,
  },
  TYPESCRIPT: {
    name: "Typescript",
    class: "bg-black textwhite",
    icon: TypeScript,
  },
  NEXTJS: {
    name: "NextJS",
    class: "bg-black text-white",
    icon: NextJs,
  },
  TAILWINDCSS: {
    name: "TailwindCSS",
    class: "bg-black text-white",
    icon: TailwindCss,
  },

  PRISMA: {
    name: "Prisma",
    class: "bg-black text-white",
    icon: Prisma,
  },
};

const PROJECTS = [
  {
    title: "E-commerce Teslo-Shop, proyecto final de Dev Talles",
    description:
      "Desarrolle un e-commerrce completo de tesla usando nextJs entre otras varias tecnologias como tailwindcss, typescript, zod, zustand, paypal, postgresql, docker, entre otras. Este proyecto me permitió aplicar todo lo aprendido durante el curso de nextJs, ademas de aprender a integrar paypal para los pagos, y a utilizar tailwindcss para darle estilo a la pagina de manera sencilla y efectiva. ",
    link: "https://teslo-shop-ebon.vercel.app/",
    github: ["https://github.com/BrunoTornese/e-commerce"],
    image: "/projects/TesloShop.webp",
    tags: [TAGS.NEXTJS, TAGS.TYPESCRIPT, TAGS.TAILWINDCSS, TAGS.PRISMA],
  },
  {
    title: "Hotelera, proyecto final Rolling Code",
    description:
      "Desarrollé y diseñé una página web completa para un hotel, enfocándome en resaltar tanto la elegancia como la intuitividad del diseño. Este proyecto demuestra mi habilidad para crear interfaces simples y atractivas, así como para implementar funcionalidades avanzadas como un sistema C.R.U.D con validaciones integradas. La web incluye gestión de habitaciones, usuarios y formularios funcionales, asegurando que cumpla con todos los requisitos modernos de desarrollo web.",
    link: "https://proyecto-final-83i.netlify.app/",
    github: [
      "https://github.com/benjaminfagioli/proyecto-final-BACK",
      "https://github.com/benjaminfagioli/proyecto-final-FRONT",
    ],
    image: "/projects/hotelera.webp",
    tags: [TAGS.REACT, TAGS.NODE, TAGS.MONGOdb, TAGS.EXPRESSJS],
  },
  {
    title: "Pagina de peliculas",
    description:
      "Este poyecyto fue una experiencia en la que desarrollé una página de películas utilizando JavaScript vanilla antes de adentrarme en bibliotecas como React. Este proyecto me proporcionó una comprensión profunda del funcionamiento del código en su forma más fundamental. Aprendí cómo estructurar y manipular datos directamente con JavaScript, lo cual fue fundamental para comprender la lógica detrás de las aplicaciones web interactivas. Además, me enseñó la importancia y las ventajas que ofrecen las bibliotecas y frameworks modernos como React, simplificando el desarrollo y mejorando la mantenibilidad de las aplicaciones web.",
    link: "https://proyecto-2-rolling.netlify.app/",
    github: "https://github.com/cristianlzelaya/Proyecto-modulo-2-js",
    image: "/projects/peliculas.webp",
    tags: [TAGS.BOOTSTRAP, TAGS.CSS, TAGS.JAVASCRIPT, TAGS.HTML],
  },
  {
    title: "Bot de musica para discord",
    description:
      "Desarrollé un bot de música para Discord utilizando PyTube y Python, superando un desafío significativo que me permitió aprender y aplicar funciones asíncronas en Python. Este proyecto consistió en integrar la biblioteca PyTube para gestionar la descarga y transmisión de videos de YouTube, y en emplear la programación asíncrona para asegurar una experiencia fluida y receptiva para los usuarios.",
    github: "https://github.com/BrunoTornese/Bot-discord",
    image: "/projects/botDiscord.webp",
    tags: [TAGS.PYTHON],
  },

  {
    title: "Pruebas tecnicas varias",
    description:
      "Este repositorio está creado con el propósito de demostrar mis habilidades y experiencia en desarrollo de software. Aquí encontraras una variedad de pruebas técnicas resueltas utilizando diferentes lenguajes de programación, frameworks y librerías que manejo. Cada solución está diseñada para mostrar mi capacidad para resolver problemas de manera eficiente y efectiva. ",

    github: "https://github.com/BrunoTornese/Pruebas-Tecnicas",
    image: "/projects/PruebasTecnicas.webp",
    tags: [TAGS.REACT, TAGS.PYTHON, TAGS.JAVASCRIPT, TAGS.TYPESCRIPT],
  },
  {
    title: "Pagina de pokemos",
    description:
      "En este proyecto se encuentran mis primeros pasos en nextJs, tailwindcss y typescript en el cual use la api de pokemon para mostrar distintos pokemons utilizando herramientas proporcionadas de nextJs, como el componente Image, el enrutado basado en carpetas y el uso de tailwindcss para darle estilo a la pagina de manera sencilla y efectiva.",
    link: "https://dashboard-next-819pzvp8k-brunotorneses-projects.vercel.app/dashboard/pokemons",
    github: "https://github.com/BrunoTornese/dashboardNextJs",
    image: "/projects/Pokemons.webp",
    tags: [TAGS.NEXTJS, TAGS.TYPESCRIPT, TAGS.TAILWINDCSS],
  },
];
---

<div class="flex flex-col gap-y-16">
  {
    PROJECTS.map(({ image, title, description, tags, link, github }) => (
      <article class="flex flex-col space-x-0 space-y-8 group md:flex-row md:space-x-8 md:space-y-0">
        <div class="w-full md:w-1/2">
          <div class="relative flex flex-col items-center col-span-6 row-span-5 gap-8 transition duration-500 ease-in-out transform shadow-xl overflow-clip rounded-xl sm:rounded-xl md:group-hover:-translate-y-1 md:group-hover:shadow-2xl lg:border lg:border-gray-800 lg:hover:border-gray-700 lg:hover:bg-gray-800/50">
            <img
              alt="Imagen del proyecto"
              class="object-cover object-top w-full h-56 transition duration-500 sm:h-full md:scale-110 md:group-hover:scale-105"
              loading="lazy"
              src={image}
            />
          </div>
        </div>

        <div class="w-full md:w-1/2 md:max-w-lg">
          <h3 class="text-2xl font-bold text-gray-800 dark:text-gray-100">
            {title}
          </h3>
          <div class="flex flex-wrap mt-2">
            <ul class="flex flex-row mb-2 gap-x-2">
              {tags.map((tag) => (
                <li>
                  <span
                    class={`flex gap-x-2 rounded-full text-xs ${tag.class} py-1 px-2`}
                  >
                    <tag.icon class="size-4" />
                    {tag.name}
                  </span>
                </li>
              ))}
            </ul>
            <div class="mt-2 text-gray-700 dark:text-gray-400">
              {description}
            </div>
            <footer class="flex items-end justify-start mt-4 gap-x-4">
              {Array.isArray(github)
                ? github.map((url) => (
                    <LinkButton href={url} key={url}>
                      <GitHub class="size-6" />
                      Code
                    </LinkButton>
                  ))
                : github && (
                    <LinkButton href={github}>
                      <GitHub class="size-6" />
                      Code
                    </LinkButton>
                  )}
              {link && (
                <LinkButton href={link}>
                  <Link class="size-4" />
                  Preview
                </LinkButton>
              )}
            </footer>
          </div>
        </div>
      </article>
    ))
  }
</div>
